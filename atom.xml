<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>最初的梦想</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-12T06:19:05.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Cao KeJi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>epoll 用法</title>
    <link href="http://yoursite.com/2016/07/10/epoll-%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2016/07/10/epoll-用法/</id>
    <published>2016-07-10T15:47:23.000Z</published>
    <updated>2016-07-12T06:19:05.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一个epoll的C语言例子&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;errno.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;netdb.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;sys/epoll.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#define MAXEVENTS 64
static int create_and_bind (char *port){
    struct addrinfo hints;
    struct addrinfo *result, *rp;
    int s,sfd;
    //将hints所在内存清0
    memset (&amp;amp;hints, 0, sizeof(struct addrinfo));
    //设置网络参数
    hints.ai_family = AF_UNSPEC;    //返回ipv4和ipv6
    hints.ai_socktype = SOCK_STREAM;  //tcp socket
    hints.ai_flags = AI_PASSIVE;
    s = getaddrinfo(NULL, port, &amp;amp;hints, &amp;amp;result);
    if(s != 0){
        fprintf(stderr, &amp;quot;getaddrinfo: %s\n&amp;quot;, gai_strerror(s));
        return -1;
    }
    //循环常见绑定socket
    for(rp=result; rp != NULL; rp=rp-&amp;gt;ai_next){
        //创建socket
        sfd = socket(rp-&amp;gt;ai_family,rp-&amp;gt;ai_socktype,rp-&amp;gt;ai_protocol);
        if(sfd == -1){
            continue;
        }
        //绑定socket
        s = bind(sfd,rp-&amp;gt;ai_addr,rp-&amp;gt;ai_addrlen);
        //成功就退出
        if(s == 0){
            break;
        }
        close(sfd);
    }
    //没有绑定成功
    if(rp == NULL){
        fprintf(stderr,&amp;quot;Couldn&amp;apos;t bind\n&amp;quot;);
    }
    //释放资源
    freeaddrinfo(result);
    return sfd;
}
static int make_socket_non_blocking (int sfd){
    int flags,s;
    flags = fcntl (sfd, F_GETFL, 0);
    if(flags == -1){
        perror(&amp;quot;fcntl&amp;quot;);
        return -1;
    }
    //设置非阻塞标志
    flags |= O_NONBLOCK;
    //重置flags
    s = fcntl (sfd, F_SETFL, flags);
    if(s == -1){
        perror (&amp;quot;fcntl&amp;quot;);
        return -1;
    }
    return 0;
}
int main(int argc, char *argv[]){
    int sfd, s;
    int efd;
    struct epoll_event event;
    struct epoll_event *events;
    if(argc != 2){
        fprintf(stderr, &amp;quot;Usage: %s [port]\n&amp;quot;,argv[0]);
        exit(EXIT_FAILURE);
    }
    sfd = create_and_bind(argv[1]);
    if(sfd == -1){
        abort ();
    }
    s = make_socket_non_blocking(sfd);
    if(s == -1){
        perror(&amp;quot;make socket no blocking&amp;quot;);
        abort();
    }
    //监听端口
    s = listen (sfd, SOMAXCONN);
    if (s == -1)
    {
        perror (&amp;quot;listen&amp;quot;);
        abort ();
    }
    efd = epoll_create1(0);
    if(efd == -1){
        perror(&amp;quot;epoll_create&amp;quot;);
        abort();
    }
    event.data.fd = sfd;
    event.events = EPOLLIN | EPOLLET;//读入，边缘触发方式
    s = epoll_ctl(efd,EPOLL_CTL_ADD,sfd,&amp;amp;event);
    if(s == -1){
        perror(&amp;quot;epoll_ctl&amp;quot;);
        abort();
    }
    //分配内存
    events = calloc(MAXEVENTS,sizeof event);
    //主循环
    while(1){
        int n,i;
        n = epoll_wait(efd,events,MAXEVENTS, -1);
        for(i = 0;i &amp;lt; n; i++){
            if((events[i].events &amp;amp; EPOLLERR)||
               (events[i].events &amp;amp; EPOLLHUP) ||
               (!(events[i].events &amp;amp; EPOLLIN))){
                fprintf(stderr, &amp;quot;epoll error\n&amp;quot;);
                close(events[i].data.fd);
                continue;
            }else if(sfd == events[i].data.fd){
                //有客户端连接请求
                while(1){
                    struct sockaddr in_addr;
                    socklen_t in_len;
                    int infd;
                    char hbuf[NI_MAXHOST], sbuf[NI_MAXSERV];
                    in_len = sizeof in_addr;
                    infd = accept(sfd, &amp;amp;in_addr, &amp;amp;in_len);
                    if(infd == -1){
                        if((errno == EAGAIN) ||
                        (errno == EWOULDBLOCK)) {
                            //所有连接都处理了
                            break;
                        }else{
                            perror (&amp;quot;accept&amp;quot;);
                            break;
                        }
                    }
                    //转换地址
                    s = getnameinfo(&amp;amp;in_addr,in_len,hbuf,sizeof hbuf,sbuf, sizeof sbuf,NI_NUMERICHOST|NI_NUMERICSERV);
                    if(s == 0){
                        printf(&amp;quot;accept connetcion on %d (host=%s, port=%s)\n&amp;quot;,infd,hbuf,sbuf);
                    }
                    s = make_socket_non_blocking(infd);
                    if(s == -1){
                        abort();
                    }
                    event.data.fd = infd;
                    event.events = EPOLLIN | EPOLLET;
                    s = epoll_ctl(efd,EPOLL_CTL_ADD,infd,&amp;amp;event);
                    if(s == -1){
                        perror(&amp;quot;epoll_ctl&amp;quot;);
                        abort();
                    }
                }
                continue;
            }else{
                //客户端连接传输的数据接收
                int done = 0;
                while(1){
                    ssize_t count;
                    char buf[512];
                    count = read(events[i].data.fd,buf,sizeof(buf));
                    if(count == -1){
                        //当errno == EAGAIN 时表示数据已经读完
                        if(errno != EAGAIN){
                            perror(&amp;quot;read&amp;quot;);
                            done = 1;
                        }
                        break;
                    }else if(count == 0){
                        //数据读完
                        done = 1;
                        break;
                    }
                    s = write (1, buf, count);
                    if(s == -1){
                        perror(&amp;quot;write&amp;quot;);
                        abort();
                    }
                }
                if(done){
                    printf(&amp;quot;close connection on %d\n&amp;quot;,events[i].data.fd);
                    close(events[i].data.fd);
                }
            }
        }
    }
    free(events);
    close(sfd);
    return EXIT_SUCCESS;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考自&lt;br&gt;&lt;a href=&quot;https://banu.com/blog/2/how-to-use-epoll-a-complete-example-in-c/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://banu.com/blog/2/how-to-use-epoll-a-complete-example-in-c/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/xiajun07061225/article/details/9250579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/xiajun07061225/article/details/9250579&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一个epoll的C语言例子&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shell 脚本命令总结</title>
    <link href="http://yoursite.com/2016/07/03/shell-%E8%84%9A%E6%9C%AC%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/07/03/shell-脚本命令总结/</id>
    <published>2016-07-03T02:52:26.000Z</published>
    <updated>2016-10-09T02:55:47.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;获取某个应用进程号-并打印此应用的环境变量&quot;&gt;&lt;a href=&quot;#获取某个应用进程号-并打印此应用的环境变量&quot; class=&quot;headerlink&quot; title=&quot;获取某个应用进程号,并打印此应用的环境变量&quot;&gt;&lt;/a&gt;获取某个应用进程号,并打印此应用的环境变量&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pgrep gedit	&lt;span class=&quot;comment&quot;&gt;#获取进程号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat /proc/进程号/environ | tr &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# tr命令格式化输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取上次命令执行成功状态&quot;&gt;&lt;a href=&quot;#获取上次命令执行成功状态&quot; class=&quot;headerlink&quot; title=&quot;获取上次命令执行成功状态&quot;&gt;&lt;/a&gt;获取上次命令执行成功状态&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#执行完命令后,紧接着执行此命令,返回0表示命令执行成功,非0表示命令执行失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;执行shell脚本的方式以及区别&quot;&gt;&lt;a href=&quot;#执行shell脚本的方式以及区别&quot; class=&quot;headerlink&quot; title=&quot;执行shell脚本的方式以及区别,&quot;&gt;&lt;/a&gt;执行shell脚本的方式以及区别,&lt;/h2&gt;&lt;p&gt;1.直接当做命令执行 ./xx.sh&lt;br&gt;2.sh script.sh 或 bash script.sh&lt;br&gt;3.source script.sh 或 . script.sh&lt;br&gt;前两种 在当前父进程下的子进程中执行，子进程完成后，子进程中的各项变量或操作将会结束而不会传回到父进程中.&lt;br&gt;第三种设置的各项参数和环境变量才会在父进程中起作用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;获取某个应用进程号-并打印此应用的环境变量&quot;&gt;&lt;a href=&quot;#获取某个应用进程号-并打印此应用的环境变量&quot; class=&quot;headerlink&quot; title=&quot;获取某个应用进程号,并打印此应用的环境变量&quot;&gt;&lt;/a&gt;获取某个应
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android 测试框架</title>
    <link href="http://yoursite.com/2016/06/28/Android-%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/06/28/Android-测试框架/</id>
    <published>2016-06-28T04:29:42.000Z</published>
    <updated>2016-06-28T04:31:06.000Z</updated>
    
    <content type="html">&lt;p&gt;adb shell am instrument -w -e class android.content.cts.ContentResolverSyncTestCase com.android.cts.content/android.support.test.runner.AndroidJUnitRunner&lt;/p&gt;
&lt;p&gt;参考 &lt;a href=&quot;https://developer.android.com/studio/test/command-line.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/studio/test/command-line.html&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;adb shell am instrument -w -e class android.content.cts.ContentResolverSyncTestCase com.android.cts.content/android.support.test.runner.AndroidJUnitRunner&lt;/p&gt;
&lt;p&gt;参考 &lt;a href=&quot;https://developer.android.com/studio/test/command-line.html&quot;&gt;https://developer.android.com/studio/test/command-line.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些关于style和attr的使用问题</title>
    <link href="http://yoursite.com/2016/06/19/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8Estyle%E5%92%8Cattr%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/06/19/一些关于style和attr的使用问题/</id>
    <published>2016-06-19T09:17:55.000Z</published>
    <updated>2016-06-19T09:23:35.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wanjf_912/article/details/7641184&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/wanjf_912/article/details/7641184&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wanjf_912/article/details/7641184&quot;&gt;http://blog.csdn.net/wanjf_912/article/details/7641184&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>重装ubuntu系统后的home挂载问题</title>
    <link href="http://yoursite.com/2016/06/04/%E9%87%8D%E8%A3%85ubuntu%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%9A%84home%E6%8C%82%E8%BD%BD%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/06/04/重装ubuntu系统后的home挂载问题/</id>
    <published>2016-06-04T02:23:40.000Z</published>
    <updated>2016-06-04T02:34:23.000Z</updated>
    
    <content type="html">&lt;p&gt;ubuntu系统从16.04重装为14.04时,因为原来16.04的home目录是挂载的一个独立分区不和/分区一起的,&lt;br&gt;但是重装网14.04后,home分区并没有用16.04的home分区,而是在/分区下的一个新的/home 导致原来的配置&lt;br&gt;信息不能使用,解决方法是重新将原home分区挂载到/home下&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-通过命令&quot;&gt;&lt;a href=&quot;#1-通过命令&quot; class=&quot;headerlink&quot; title=&quot;1. 通过命令&quot;&gt;&lt;/a&gt;1. 通过命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;sudo blkid
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;获取对应原-home分区的uuid&quot;&gt;&lt;a href=&quot;#获取对应原-home分区的uuid&quot; class=&quot;headerlink&quot; title=&quot;获取对应原/home分区的uuid&quot;&gt;&lt;/a&gt;获取对应原/home分区的uuid&lt;/h2&gt;&lt;h2 id=&quot;2-编辑-etc-fstab-添加&quot;&gt;&lt;a href=&quot;#2-编辑-etc-fstab-添加&quot; class=&quot;headerlink&quot; title=&quot;2. 编辑 /etc/fstab,添加&quot;&gt;&lt;/a&gt;2. 编辑 /etc/fstab,添加&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;UUID=XXXXXXX /home ext4 defaults 0 2
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;保存后重启-解决问题&quot;&gt;&lt;a href=&quot;#保存后重启-解决问题&quot; class=&quot;headerlink&quot; title=&quot;保存后重启,解决问题&quot;&gt;&lt;/a&gt;保存后重启,解决问题&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;ubuntu系统从16.04重装为14.04时,因为原来16.04的home目录是挂载的一个独立分区不和/分区一起的,&lt;br&gt;但是重装网14.04后,home分区并没有用16.04的home分区,而是在/分区下的一个新的/home 导致原来的配置&lt;br&gt;信息不能使用,解决方法是重新将原home分区挂载到/home下&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>android json 解析</title>
    <link href="http://yoursite.com/2016/05/24/android-json-%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2016/05/24/android-json-解析/</id>
    <published>2016-05-24T13:46:15.000Z</published>
    <updated>2016-05-25T05:33:56.000Z</updated>
    
    <content type="html">&lt;p&gt;服务器传输的数据不能保证准确性,甚至是类型也有可能错误的,客户端最低首先要求是不能崩溃&lt;br&gt;Android自带org.json类库,此类库的操作是首先通过 JSONObject.isNull方法判断是否存在&lt;br&gt;解析字段,如果有的话,再通过 JSONObject.optXXX(“xxx”);获取指定数值,此方法已经进行了类型&lt;br&gt;判断,不用我们再进行判断,避免了类型转换异常&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;服务器传输的数据不能保证准确性,甚至是类型也有可能错误的,客户端最低首先要求是不能崩溃&lt;br&gt;Android自带org.json类库,此类库的操作是首先通过 JSONObject.isNull方法判断是否存在&lt;br&gt;解析字段,如果有的话,再通过 JSONObject.opt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo 博客工具</title>
    <link href="http://yoursite.com/2016/05/23/hexo-%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2016/05/23/hexo-博客工具/</id>
    <published>2016-05-23T05:42:38.000Z</published>
    <updated>2016-05-23T05:45:50.000Z</updated>
    
    <content type="html">&lt;p&gt;hexo new “xxxxx” 创建新页面&lt;br&gt;hexo g 生成页面&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;hexo new “xxxxx” 创建新页面&lt;br&gt;hexo g 生成页面&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 命令总结</title>
    <link href="http://yoursite.com/2016/05/23/git-%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/05/23/git-命令总结/</id>
    <published>2016-05-23T05:42:01.000Z</published>
    <updated>2016-05-23T05:44:53.000Z</updated>
    
    <content type="html">&lt;p&gt;查询某一样的修改记录&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git blame xxx.java | grep &lt;span class=&quot;string&quot;&gt;&quot;需要查询的字符串&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;查询某一样的修改记录&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git blame xxx.java | grep &lt;span class=&quot;string&quot;&gt;&quot;需要查询的字符串&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android 总结</title>
    <link href="http://yoursite.com/2016/05/07/Android-%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/05/07/Android-总结/</id>
    <published>2016-05-07T01:31:33.000Z</published>
    <updated>2016-05-29T02:48:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Android-TextView-间距调整&quot;&gt;&lt;a href=&quot;#Android-TextView-间距调整&quot; class=&quot;headerlink&quot; title=&quot;Android TextView 间距调整&quot;&gt;&lt;/a&gt;Android TextView 间距调整&lt;/h2&gt;&lt;p&gt;通过设置&lt;br&gt;    android:lineSpacingExtra=”12dip” //设置间距&lt;br&gt;    android:lineSpacingMultipier=”2” //设置行间距的倍数&lt;br&gt;    android:includeFontPadding=”false” //取消默认首行尾行的默认padding间距&lt;br&gt;    &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何对图片进行着色&quot;&gt;&lt;a href=&quot;#如何对图片进行着色&quot; class=&quot;headerlink&quot; title=&quot;如何对图片进行着色&quot;&gt;&lt;/a&gt;如何对图片进行着色&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;TintedBitmapDrawable TintedBitmapDrawable = new TintedBitmapDrawable(getResource(),R.drawable.XXX, Color.BLACK);
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Android-TextView-间距调整&quot;&gt;&lt;a href=&quot;#Android-TextView-间距调整&quot; class=&quot;headerlink&quot; title=&quot;Android TextView 间距调整&quot;&gt;&lt;/a&gt;Android TextView 间距调整&lt;/h2&gt;&lt;p&gt;通过设置&lt;br&gt;    android:lineSpacingExtra=”12dip” //设置间距&lt;br&gt;    android:lineSpacingMultipier=”2” //设置行间距的倍数&lt;br&gt;    android:includeFontPadding=”false” //取消默认首行尾行的默认padding间距&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android 命令</title>
    <link href="http://yoursite.com/2016/05/02/Android-%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2016/05/02/Android-命令/</id>
    <published>2016-05-02T14:24:27.000Z</published>
    <updated>2016-05-02T14:37:46.000Z</updated>
    
    <content type="html">&lt;p&gt;输出电池信息&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dumpsys batterystats &amp;gt; battery.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;输出电池信息&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu16.04问题</title>
    <link href="http://yoursite.com/2016/05/02/ubuntu%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2016/05/02/ubuntu命令/</id>
    <published>2016-05-02T02:44:27.000Z</published>
    <updated>2016-07-08T05:51:35.000Z</updated>
    
    <content type="html">&lt;p&gt;ubuntu 包管理器命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo synaptic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装主题&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install unity-tweak-tool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下载主题 &lt;a href=&quot;https://www.sysgeek.cn/additional-icon-packs-linux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.sysgeek.cn/additional-icon-packs-linux/&lt;/a&gt;&lt;br&gt;删除软件命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get --purge atuoremove &amp;lt;pagename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;搜索指定字符串命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ grep -rn &lt;span class=&quot;string&quot;&gt;&quot;search string&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装flash播放器-优酷等视频网站需要&quot;&gt;&lt;a href=&quot;#安装flash播放器-优酷等视频网站需要&quot; class=&quot;headerlink&quot; title=&quot;安装flash播放器(优酷等视频网站需要)&quot;&gt;&lt;/a&gt;安装flash播放器(优酷等视频网站需要)&lt;/h2&gt;&lt;p&gt;sudo apt-get install flashplugin-installer&lt;/p&gt;
&lt;h2 id=&quot;系统更新&quot;&gt;&lt;a href=&quot;#系统更新&quot; class=&quot;headerlink&quot; title=&quot;系统更新&quot;&gt;&lt;/a&gt;系统更新&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get dist-upgrade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo update-manager –d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行如上命令,软件更新器就会去检查新版本&lt;/p&gt;
&lt;h2 id=&quot;Ubuntu16-04&quot;&gt;&lt;a href=&quot;#Ubuntu16-04&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu16.04&quot;&gt;&lt;/a&gt;Ubuntu16.04&lt;/h2&gt;&lt;p&gt;将 Ubuntu 16.04 LTS 的 Unity 启动器移动到桌面底部命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gsettings &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; com.canonical.Unity.Launcher launcher-position Bottom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;恢复到原来的左侧命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gsettings &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; com.canonical.Unity.Launcher launcher-position Left&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;升级16.04时用gerrit出现问题 no matching key exchange method found. Their offer: diffie-hellman-group1-sha1&lt;br&gt;网上说是ssh版本过高所致的(&lt;a href=&quot;https://code.google.com/p/gerrit/issues/detail?id=3517),解决方法是在~/.ssh/config&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.google.com/p/gerrit/issues/detail?id=3517),解决方法是在~/.ssh/config&lt;/a&gt; 文件中的 Host * 下添加一行配置参数&lt;br&gt;KexAlgorithms +diffie-hellman-group1-sha1&lt;br&gt;加上此配置后可以clone代码了,但是提交代码还是不行,临时解决方法是在提交到gerrit前执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; GIT_SSH_COMMAND=&lt;span class=&quot;string&quot;&gt;&#39;ssh -o KexAlgorithms=+diffie-hellman-group1-sha1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就可以提交成功&lt;/p&gt;
&lt;h2 id=&quot;Android-在Ubuntu16-04下的编译问题&quot;&gt;&lt;a href=&quot;#Android-在Ubuntu16-04下的编译问题&quot; class=&quot;headerlink&quot; title=&quot;Android 在Ubuntu16.04下的编译问题&quot;&gt;&lt;/a&gt;Android 在Ubuntu16.04下的编译问题&lt;/h2&gt;&lt;p&gt;Ubuntu16.04 默认安装的是openjdk8,导致编译时出现错误,提示用openjdk7,但是在错误的文件main.mk中,可以发现是可以支持jdk8的,只需要&lt;br&gt;在编译前加入参数 export EXPERIMENTAL_USE_JAVA8=true即可,但是编译源码guava时还是会报错,只能换回jdk7了,直接用命令行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sudo&lt;/span&gt; apt-get install openjdk-7-jdk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提示安装失败,似乎是没有源了,通过命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sudo&lt;/span&gt; add-apt-repository ppa:openjdk-r/ppa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sudo&lt;/span&gt; apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sudo&lt;/span&gt; apt-get install openjdk-7-jdk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进行安装&lt;/p&gt;
&lt;p&gt;编译6.0源码时出现错误 &lt;strong&gt;android unsupported reloc 42&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=209698&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bbs.archlinux.org/viewtopic.php?id=209698&lt;/a&gt; 的六楼找到解决方法&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mv prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.15-4.8/x86_64-linux/bin/ld prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.15-4.8/x86_64-linux/bin/ld.OLD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ln &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; /usr/bin/ld.gold prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.15-4.8/x86_64-linux/bin/ld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;创建桌面快捷方式-如创建android-studio的快捷方式-创建文件-usr-share-applications-xxxxx-desktop-编辑内容如下&quot;&gt;&lt;a href=&quot;#创建桌面快捷方式-如创建android-studio的快捷方式-创建文件-usr-share-applications-xxxxx-desktop-编辑内容如下&quot; class=&quot;headerlink&quot; title=&quot;创建桌面快捷方式,如创建android studio的快捷方式,创建文件 /usr/share/applications/xxxxx.desktop,编辑内容如下&quot;&gt;&lt;/a&gt;创建桌面快捷方式,如创建android studio的快捷方式,创建文件 /usr/share/applications/xxxxx.desktop,编辑内容如下&lt;/h2&gt;&lt;p&gt;[Desktop Entry]&lt;br&gt;    Type=Application&lt;br&gt;    Name=studio    #名称&lt;br&gt;    Comment=studio&lt;br&gt;    Icon=/home/用户/图片/4.jpg #图标&lt;br&gt;    Exec=/home/用户/software/android-studio/bin/studio.sh #应用程序路径&lt;br&gt;    Terminal=false&lt;br&gt;    Categories=Development;IDE;Java;&lt;/p&gt;
&lt;h2 id=&quot;ubuntu引导丢失的解决方法&quot;&gt;&lt;a href=&quot;#ubuntu引导丢失的解决方法&quot; class=&quot;headerlink&quot; title=&quot;ubuntu引导丢失的解决方法&quot;&gt;&lt;/a&gt;ubuntu引导丢失的解决方法&lt;/h2&gt;&lt;p&gt;使用ubuntu可启动U盘启动系统&lt;/p&gt;
&lt;p&gt;按win键，打开Dash，在其中输入terminal，打开搜索到的terminal&lt;/p&gt;
&lt;p&gt;添加boot-repair的ppa。&lt;br&gt;在终端中输入 sudo add-apt-repository ppa:yannubuntu/boot-repair&lt;br&gt;按回车键添加完毕后，再输入命令 sudo apt-get update更新系统软件源列表&lt;/p&gt;
&lt;p&gt;安装boot-repair。在终端中输入命令sudo apt-get install boot-repair来安装boot-repair&lt;/p&gt;
&lt;p&gt;打开Dash，输入boot-repair，启动它，点击recommanded repair按钮。接下来等待软件自动搜索并弹出一个软件框提示你在终端中输入命令，按要求一条一条的复制其中的命令到终端中执行即可。结束后，重启电脑&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ubuntu 包管理器命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo synaptic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装主题&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install unity-tweak-tool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下载主题 &lt;a href=&quot;https://www.sysgeek.cn/additional-icon-packs-linux/&quot;&gt;https://www.sysgeek.cn/additional-icon-packs-linux/&lt;/a&gt;&lt;br&gt;删除软件命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get --purge atuoremove &amp;lt;pagename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown 语法说明</title>
    <link href="http://yoursite.com/2016/05/01/Markdown-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2016/05/01/Markdown-语法说明/</id>
    <published>2016-05-01T07:57:28.000Z</published>
    <updated>2016-05-01T08:41:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Markdown-语法说明&quot;&gt;&lt;a href=&quot;#Markdown-语法说明&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法说明&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/#editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;Markdown-语法2&quot;&gt;&lt;a href=&quot;#Markdown-语法2&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法2&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/keji/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法2&lt;/a&gt;&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Markdown-语法说明&quot;&gt;&lt;a href=&quot;#Markdown-语法说明&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法说明&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/#editor&quot;&gt;Markdown 语法说明&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;Markdown-语法2&quot;&gt;&lt;a href=&quot;#Markdown-语法2&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法2&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/keji/Markdown&quot;&gt;Markdown 语法2&lt;/a&gt;&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Layout weight 用法</title>
    <link href="http://yoursite.com/2016/05/01/layout-weight/"/>
    <id>http://yoursite.com/2016/05/01/layout-weight/</id>
    <published>2016-05-01T07:36:19.000Z</published>
    <updated>2016-05-01T08:40:51.000Z</updated>
    
    <content type="html">&lt;p&gt;来自 &lt;a href=&quot;http://developer.android.com/guide/topics/ui/layout/linear.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android 官方文档&lt;/a&gt;&lt;br&gt;LinearLayout also supports assigning a weight to individual children with the android:layout_weight attribute. This attribute assigns an “importance” value to a view in terms of how much space it should occupy on the screen. A larger weight value allows it to expand to fill any remaining space in the parent view. Child views can specify a weight value, and then any remaining space in the view group is assigned to children in the proportion of their declared weight. Default weight is zero.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://developer.android.com/images/ui/linearlayout.png&quot; alt=&quot;提示图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;For example, if there are three text fields and two of them declare a weight of 1, while the other is given no weight, the third text field without weight will not grow and will only occupy the area required by its content. The other two will expand equally to fill the space remaining after all three fields are measured. If the third field is then given a weight of 2 (instead of 0), then it is now declared more important than both the others, so it gets half the total remaining space, while the first two share the rest equally.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
    android:paddingLeft=&amp;quot;16dp&amp;quot;
    android:paddingRight=&amp;quot;16dp&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot; &amp;gt;
    &amp;lt;EditText
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:hint=&amp;quot;@string/to&amp;quot; /&amp;gt;
    &amp;lt;EditText
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:hint=&amp;quot;@string/subject&amp;quot; /&amp;gt;
    &amp;lt;EditText
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;0dp&amp;quot;
        android:layout_weight=&amp;quot;1&amp;quot;
        android:gravity=&amp;quot;top&amp;quot;
        android:hint=&amp;quot;@string/message&amp;quot; /&amp;gt;
    &amp;lt;Button
        android:layout_width=&amp;quot;100dp&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:layout_gravity=&amp;quot;right&amp;quot;
        android:text=&amp;quot;@string/send&amp;quot; /&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;来自 &lt;a href=&quot;http://developer.android.com/guide/topics/ui/layout/linear.html&quot;&gt;android 官方文档&lt;/a&gt;&lt;br&gt;LinearLayout also supports assigning a weight to individual children with the android:layout_weight attribute. This attribute assigns an “importance” value to a view in terms of how much space it should occupy on the screen. A larger weight value allows it to expand to fill any remaining space in the parent view. Child views can specify a weight value, and then any remaining space in the view group is assigned to children in the proportion of their declared weight. Default weight is zero.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu14.04 升级15.10时黑屏问题</title>
    <link href="http://yoursite.com/2016/05/01/myfirst/"/>
    <id>http://yoursite.com/2016/05/01/myfirst/</id>
    <published>2016-05-01T06:06:20.000Z</published>
    <updated>2016-05-01T08:41:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Ubuntu14.04 升级15.10时黑屏问题. 系统进入后显示器无信号,很奇怪的问题,初步怀疑是N卡驱动问题,因此进入recovery模式,想通过命令行安装显卡驱动,但是执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install ppa-purge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现错误,dpkg 被中断,您必须手工运行 sudo dpkg –configure -a 解决此问题&lt;br&gt;因此执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo dpkg --configure &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行完此命令后,重启了电脑竟然可以进入系统了&lt;br&gt;&lt;a href=&quot;keji.github.io&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu14.04 升级15.10时黑屏问题. 系统进入后显示器无信号,很奇怪的问题,初步怀疑是N卡驱动问题,因此进入recovery模式,想通过命令行安装显卡驱动,但是执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
    
  </entry>
  
</feed>
